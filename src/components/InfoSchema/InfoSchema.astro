---
export interface InfoSchemaProps {
    topTitle: string;
    bottomTitle: string;
    linebreak?: boolean;
    content: string;
    button?: {
        linkPath: string;
        content: string;
    }
}
const { topTitle, bottomTitle, linebreak = false, content, button } = Astro.props as InfoSchemaProps;
---

<article class="info-schema">
    <div class="title-container">
        <h2>
            <span>{topTitle}</span>
            {linebreak && <br>}
            <b>{bottomTitle}</b>
        </h2>
    </div>
    <div class="paragraph-container">
        <div class="ornament">
            <p>
                {content}
            </p>
            {button && <a href={button.linkPath}>{button.content}</a>}
        </div>
    </div>
</article>

<style lang="scss">
    .info-schema {
        text-align: center;
        width: 100%;
        max-width: 1920px;
    }
    .title-container {
        content: "";
        border: 8px solid var(--primary);
        border-bottom: 0;
        margin: 0 auto 0;
        width: calc(100% - 3rem);
        max-width: 960px;
        @media (max-width: 650px) {
            border-width: 4px;
            width: calc(100% - 3rem);
        }
        h2 {
            font-size: 60px;
            color: var(--primary);
            background-color: var(--white);
            margin-top: -33px;
            padding: 0 30px;
            display: inline-block;
            margin-bottom: 20px;
            font-weight: 400;
            @media (max-width: 850px) {
                font-size: 50px;
            }
            @media (max-width: 650px) {
                font-size: 35px;
                padding: 0 10px;
            }
            @media (max-width: 500px) {
                font-size: 23px;
                padding: 0 5px;
            }
        }
        span {
            @media (max-width: 500px) {
                display: block;
            }
        }
        br {
            @media (max-width: 500px) {
                display: none;
            }
        }
    }
    .paragraph-container {
        padding: 30px 0;
        background-image: url(/images/HERO_OVERLAY.jpg);
        background-size: cover;
        p {
            width: 70%;
            font-size: 27px;
            line-height: 50px;
            color: var(--white);
            margin: 27px 0;
            @media (max-width: 1024px) {
                width: 90%;
            }
            @media (max-width: 650px) {
                font-size: 20px;
                line-height: 30px;
            }
            @media (max-width: 500px) {
                font-size: 18px;
            }
        }
        a {
            text-decoration: none;
            color: var(--primary);
            padding: 10px 15px;
            background-color: var(--white);
            border-radius: 5px;
            border: 2px solid var(--gray-1);
            font-size: 20px;
            font-weight: 600;
            transition: 0.2s ease-in-out;
            &:hover {
                background-color: transparent;
                color: var(--white);
                border: 2px solid var(--white);
            }
        }
    }
    .ornament {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 10px 0 20px 0;
        border: 4px solid var(--fifth-color);
        border-top: 0;
        margin: 0 auto 0;
        width: calc(100% - 3rem);
        max-width: 960px;
        @media (min-width: 1441px) {
            max-width: 1280px;
        }
        @media (max-width: 650px) {
            gap: 15px;
        }
    }
</style>