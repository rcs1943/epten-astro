---
interface Props {
    name: string;
    dataTitle: string;
    dataRequired?: boolean;
    defaultValue: string;
    optionList: {
        label: string;
        options: string[];
    }[];
    error?: string;
}
const {
    name,
    dataTitle,
    dataRequired = true,
    defaultValue,
    optionList,
    error,
} = Astro.props as Props;
---

<div class="wrapper">
    <select id="custom-drop-down" name={name} data-title={dataTitle} data-required={dataRequired}>
        <option disabled selected value="">
            {defaultValue}
        </option>
        {
            optionList.map(({ label, options }) => {
                return (
                    <optgroup label={label}>
                        {options.map(option => (
                            <option value={option}>{option}</option>
                        ))}
                    </optgroup>
                );
            })
        }
    </select>
    <iconify-icon icon="ep:arrow-down-bold" id="arrow-icon"></iconify-icon>
</div>

<style lang="scss" is:global>
    // #custom-drop-down {
    //     display: flex;
    //     flex-direction: column;
    //     width: 100%;
    //     .error {
    //         display: flex;
    //         justify-content: flex-start;
    //         color: #ef4423;
    //     }
    // }
    .wrapper {
        position: relative;
        select {
            font-size: 20px;
            padding: 15px;
            border-radius: 5px;
            color: var(--primary);
            cursor: pointer;
            text-overflow: ellipsis;
            border: 1px solid var(--fourth-color);
            outline: none;
            transition: 0.2s;
            appearance: none;
            width: 100%;
            background-color: transparent;
            &:focus {
                border: 1px solid var(--primary);
            }
            &:focus + #arrow-icon {
                color: var(--primary);
            }
        }
        #arrow-icon {
            position: absolute;
            font-size: 20px;
            color: var(--fourth-color);
            right: 10px;
            top: 50%;
            translate: 0 -50%;
            z-index: -1;
            transition: 0.2s;
        }
    }
</style>
